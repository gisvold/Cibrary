@using Cibrary.Models
@using Microsoft.Ajax.Utilities
@using Microsoft.AspNet.Identity
@model IEnumerable<Cibrary.Models.Book>

@{
    ViewBag.Title = "Search Page";
}


@using (Html.BeginForm())
{
    <p id="SearchBoxContainer">
        @Html.TextBox("SearchString")
        <input type="submit" class="submitsearch" value="" />
    </p>
}





<div class="accordion" id="booklist">

    @foreach (var item in Model)
    {
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="booklist" href="#@Html.DisplayFor(m => item.BookId)">
                    @Html.DisplayFor(modelItem => item.Title) (utgave @Html.DisplayFor(modelItem => item.Edition))<br>
                    <span style="font-style:italic; font-weight: normal; margin-left: 5px;">Av: @Html.DisplayFor(modelItem => item.Author), utgitt @Html.DisplayFor(modelItem => item.ReleaseYear)</span>
                    @if (item.Loans.FirstOrDefault(l => l.TimeDelievered == null) == null)
                    {
                        if (item.Loans.FirstOrDefault(l => l.UserId == User.Identity.GetUserId() && l.BookId == item.BookId) != null)
                            {
                                 <span style="float: right">Beklager, du kan ikke låne en bok mer enn en gang :)</span>
                            }
                        else
                        {
                                  @Html.ActionLink("Lån", "LoanBook", new { id = item.BookId }, new {@class="accordion-button-loan pull-right"})
                        }
                        
                    }
                    else
                    {

                        var firstOrDefault = item.Loans.FirstOrDefault(l => l.TimeDelievered == null);
                        if (firstOrDefault != null && HttpContext.Current.User.Identity.Name == firstOrDefault.UserProfile.UserName)
                        {
                            
                            <span style="float: right">@Html.ActionLink("Returnér", "DeliverBook", new { id = item.BookId }, new {@class="accordion-button-return pull-right"})</span>

                        }
                        else
                        {
                            <span class="accordion-button">Utlånt</span>
                        }


                    }

                </a>
            </div>
            <div id="@Html.DisplayFor(m => item.BookId)" class="accordion-body collapse">
                <div class="accordion-inner">

                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    <div>
                        Kategorier:
                        @foreach (var kat in item.Categories)
                        {
                            <span class="tag">
                                @Html.ActionLink(kat.Name, "Index", new { searchString = kat.Name })
                            </span>
                        }
                    </div>
                    <br>

                    @Html.ActionLink("Rediger", "Edit", new { id = item.BookId }) | @Html.ActionLink("Slett", "Delete", new { id = item.BookId })
                </div>
            </div>
        </div>
    }


</div>
<span class="pull-right">
    @{
        int available = 0;
       
        foreach (var book in Model)
        {
            var firstOrDefault = book.Loans.FirstOrDefault(x => x.TimeDelievered == null);
            if (firstOrDefault == null)
            {
                available++;
            }
        }
        
    }
    @Html.DisplayFor(a => available) tilgjengelige bøker (
    @{
        int total = Model.Count();
    }
    @Html.DisplayFor(t => total) totalt )
</span>
<p>
    <i class="icon-plus"></i>
    @Html.ActionLink("Legg til bok", "Create")
</p>